name: Deploy to ECS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: ws-cicd-repository/cicd-application
  ECS_CLUSTER: cicd-cluster
  ECS_SERVICE: cicd-service
  ECS_TASK_DEFINITION: cicd-task-def
  CONTAINER_NAME: cicd-container

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        TZ: Asia/Seoul
      run: |
        # 한국 시간 기준으로 YYYYMMDDHHMMSS 형식 태그 생성
        KST_TAG=$(date +'%Y%m%d%H%M%S')
        
        # Build Docker image with KST tag only
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$KST_TAG .
        
        # Push image to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$KST_TAG
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$KST_TAG" >> $GITHUB_OUTPUT
        echo "kst_tag=$KST_TAG" >> $GITHUB_OUTPUT

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
        --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Update version file
      run: |
        echo "V1.0.1" > version.txt
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "Update version to V1.0.1" || echo "No changes to commit"
        git push || echo "Push failed or no changes"
